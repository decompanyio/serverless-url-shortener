service: serverless-url-shortener

provider:
  name: aws
  endpointType: ${file(config.json):API_ENDPOINT_TYPE}
  runtime: nodejs8.10
  stage: ${file(config.json):STAGE}
  region: ${file(config.json):REGION}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - dynamodb:*
      Resource: 
        - "arn:${file(config.json):S3_PARTITION}:s3:::${file(config.json):BUCKET}/*"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${file(config.json):DYNAMO_TABLE}"

functions:
  store:
    handler: api/store.handle
    events:
      - http:
          path: /
          method: post
          cors: true

resources:
  Resources:
    ServerlesslyRedirectS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${file(config.json):BUCKET}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
    ServerlesslyRedirectS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: ${file(config.json):BUCKET}
        PolicyDocument:
          Statement:
          - Action:
            - s3:GetObject
            Effect: Allow
            Resource:
            - arn:${file(config.json):S3_PARTITION}:s3:::${file(config.json):BUCKET}/*
            Principal: "*"
    ShortUrlTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${file(config.json):DYNAMO_TABLE}
        AttributeDefinitions:
          - AttributeName: longUrl
            AttributeType: S
        KeySchema:
          - AttributeName: longUrl
            KeyType: HASH
        # Set the capacity based on the stage
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
